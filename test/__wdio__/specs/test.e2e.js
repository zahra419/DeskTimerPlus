


describe('test the application', () => {
  it('application title', async () => {
    await browser.url('http://localhost:1420/')
    await expect(browser).toHaveTitle('DeskTimerPlus')
  })
 it('menu should be displayed', () => {
    const menuItems = $$('. menu > *')
    expect(menuItems).toBeDisplayed()
    expect(menuItems).toBeClickable()
    expect(menuItems).toBeElementsArrayOfSize({ gte: 1 })
  })

  it('check input and buttons of timer', async () => {
    const hrs_input = $('input[name="hours"]')
    expect(hrs_input).toBeDisplayed()
    //await hrs_input.setValue(1)
    const mins_input = $('input[name="minutes"]')
    expect(mins_input).toBeDisplayed()
    //await mins_input.setValue(1)
    const secs_input = $('input[name="seconds"]')
    expect(secs_input).toBeDisplayed()
    await secs_input.setValue(1)
    const btn = $$('.btn_box')
    expect(btn[0]).toBeDisplayed()
    btn[0].toBeClickable()
    expect(btn[1]).not.toBeDisplayed()
    btn[1].toBeClickable()
    expect(btn[2]).toBeDisplayed()
    btn[2].toBeClickable()
    const data=$('p')
    await expect(data).toHaveText('00:00:00')
  })
 it('stopwatch page should be displayed ', async () => {
    const menu_Buttons = $$('.menu > *')
    const stopwatch_menu_Page = $('.stopwatch')
    await menu_Buttons[1].click()
    await expect(stopwatch_menu_Page).toBeDisplayed()
    const btn = $$('.btn_box')
    expect(btn[0]).toBeDisplayed()
    btn[0].toBeClickable()
    expect(btn[1]).not.toBeDisplayed()
    btn[1].toBeClickable()
    expect(btn[2]).toBeDisplayed()
    btn[2].toBeClickable()
    const data=$('p')
    await expect(data).toHaveText('00:00:00')
  })
  it('interval workout page should be displayed ', async () => {
    const menu_Buttons = $$('.menu')
    const it_menu_Page = $('.interval')
    await menu_Buttons[2].click()
    await expect(it_menu_Page).toBeDisplayed()
    expect($('.progressBar_container')).toBeDisplayed()
    expect($('#state')).toHaveText('START')
    expect($('.total_timer')).toHaveText('00:00')
     expect($('.current_set')).toHaveText('0/0')
    const btn = $$('.btn_box')
    expect(btn[0]).toBeDisplayed()
    btn[0].toBeClickable()
    expect(btn[1]).not.toBeDisplayed()
    btn[1].toBeClickable()
    expect(btn[2]).toBeDisplayed()
    btn[2].toBeClickable()
  })
  it('timer page should be displayed ', async () => {
    const menu_Buttons = $$('.menu')
    const timer_Page = $('.timer')
    await menu_Buttons[0].click()
    await expect(timer_Page).toBeDisplayed()
  })
  it('setting page should be displayed',async()=>{
    const menu_Buttons = $$('.menu')
    const settings_Page = $('.settings_container')
     await  menu_Buttons[3].click()
     await expect(settings_Page).toBeDisplayed()
     const app=$('.app')
     const colors=$$('backgroundColors_list')
     await colors[1].click()
     expect(app).toHaveStyle({backgroundColor:'#F0F4F9',color:'#121212'})
     const fonts=$$('fonts_list')
     await fonts[1].click()
     expect(app.fontFamily).toBe('LiquidCrystal-Bold')
  })
})