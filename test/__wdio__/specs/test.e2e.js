


describe('test the application', () => {
  it('application title', async () => {
    await browser.url('http://localhost:1420/')
    await expect(browser).toHaveTitle('Timer')
  })
  it('menu should be displayed', () => {
    const menuItems = $$('. menu > *')
    expect(menuItems).toBeDisplayed()
    expect(menuItems).toBeClickable()
    expect(menuItems).toBeElementsArrayOfSize({ gte: 1 })
  })

  it('check input and buttons of timer', async () => {
    const hrs_input = $('input[name="hrs"]')
    expect(hrs_input).toBeDisplayed()
    await hrs_input.setValue(1)
    const mins_input = $('input[name="mins"]')
    expect(mins_input).toBeDisplayed()
    await mins_input.setValue(1)
    const secs_input = $('input[name="secs"]')
    expect(secs_input).toBeDisplayed()
    await secs_input.setValue(1)
    const btn = $$('.btn_box')
    expect(btn[0]).toBeDisplayed()
    btn[0].toBeClickable()
    expect(btn[1]).not.toBeDisplayed()
    btn[1].toBeClickable()
    expect(btn[2]).toBeDisplayed()
    btn[2].toBeClickable()
    const data=$('p')
    await expect(data).toHaveText('00:00:00')
  })
  it('stopwatch page should be displayed ', async () => {
    const stopwatch_menu_Button = $('=Stopwatch')
    const stopwatch_menu_Page = $('.stopwatch')
    await stopwatch_menu_Button.click()
    await expect(stopwatch_menu_Page).toBeDisplayed()
    const btn = $$('.btn_box')
    expect(btn[0]).toBeDisplayed()
    btn[0].toBeClickable()
    expect(btn[1]).not.toBeDisplayed()
    btn[1].toBeClickable()
    expect(btn[2]).toBeDisplayed()
    btn[2].toBeClickable()
    const data=$('p')
    await expect(data).toHaveText('00:00:00')
  })
  it('interval workout page should be displayed ', async () => {
    const it_menu_Button = $('=Interval Timer')
    const it_menu_Page = $('.interval')
    await it_menu_Button.click()
    await expect(it_menu_Page).toBeDisplayed()
    const show_res=$$('.interval_timer'  )
    expect(show_res[0]).toHaveText('00')
    expect(show_res[1]).toHaveText('Start')
    expect(show_res[2]).toHaveText('00:00')
    const btn = $$('.btn_box')
    expect(btn[0]).toBeDisplayed()
    btn[0].toBeClickable()
    expect(btn[1]).not.toBeDisplayed()
    btn[1].toBeClickable()
    expect(btn[2]).toBeDisplayed()
    btn[2].toBeClickable()
  })
  it('timer page should be displayed ', async () => {
    const it_Button = $('=Timer')
    const it_Page = $('.timer')
    await it_Button.click()
    await expect(it_Page).toBeDisplayed()
  })

})